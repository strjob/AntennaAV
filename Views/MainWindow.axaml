<Window
    x:Class="AntennaAV.Views.MainWindow"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ScottPlot="clr-namespace:ScottPlot.Avalonia;assembly=ScottPlot.Avalonia"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:AntennaAV"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:treegrid="clr-namespace:Avalonia.Controls;assembly=Avalonia.Controls.TreeDataGrid"
    xmlns:vm="using:AntennaAV.ViewModels"
    Title="AntennaAV"
    d:DesignHeight="720"
    d:DesignWidth="1366"
    x:DataType="vm:MainWindowViewModel"
    Icon="/Assets/avalonia-logo.ico"
    mc:Ignorable="d">

    <Window.Resources>
        <local:HexToColorConverter x:Key="HexToColorConverter" />
    </Window.Resources>

    <Window.Resources>
        <StreamGeometry x:Key="save_as_regular">M5.75 3C4.23122 3 3 4.23122 3 5.75V18.25C3 19.7688 4.23122 21 5.75 21H9.99852C9.99129 20.8075 10.011 20.6088 10.0613 20.4075L10.2882 19.5H7.5V14.25C7.5 13.8358 7.83579 13.5 8.25 13.5H14.8531L16.2883 12.0648C16.1158 12.0225 15.9355 12 15.75 12H8.25C7.00736 12 6 13.0074 6 14.25V19.5H5.75C5.05964 19.5 4.5 18.9404 4.5 18.25V5.75C4.5 5.05964 5.05964 4.5 5.75 4.5H7V7.25C7 8.49264 8.00736 9.5 9.25 9.5H13.75C14.9926 9.5 16 8.49264 16 7.25V4.52344C16.3582 4.58269 16.6918 4.75246 16.9519 5.01256L18.9874 7.0481C19.3156 7.37629 19.5 7.8214 19.5 8.28553V10.007C19.5709 10.0024 19.642 10 19.713 10H19.7151C20.1521 10.0002 20.59 10.0874 21 10.2615V8.28553C21 7.42358 20.6576 6.59693 20.0481 5.98744L18.0126 3.9519C17.4031 3.34241 16.5764 3 15.7145 3H5.75ZM8.5 7.25V4.5H14.5V7.25C14.5 7.66421 14.1642 8 13.75 8H9.25C8.83579 8 8.5 7.66421 8.5 7.25Z M19.7152 11H19.7131C19.1285 11.0003 18.5439 11.2234 18.0979 11.6695L12.1955 17.5719C11.8513 17.916 11.6072 18.3472 11.4892 18.8194L11.0315 20.6501C10.8325 21.4462 11.5536 22.1674 12.3497 21.9683L14.1804 21.5106C14.6526 21.3926 15.0838 21.1485 15.4279 20.8043L21.3303 14.9019C22.223 14.0093 22.223 12.5621 21.3303 11.6695C20.8843 11.2234 20.2998 11.0003 19.7152 11Z</StreamGeometry>
    </Window.Resources>

    <Design.DataContext>
        <!--
            This only sets the DataContext for the previewer in an IDE,
            to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs)
        -->
        <vm:MainWindowViewModel />
    </Design.DataContext>

    <Grid ShowGridLines="True">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250" />
            <ColumnDefinition Width="0.65*" MinWidth="300" />
            <ColumnDefinition Width="0.35*" MinWidth="200" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <TextBlock
            Grid.Row="0"
            Margin="5"
            VerticalAlignment="Bottom"
            FontSize="14"
            Text="{CompiledBinding ConnectionStatus}" />

        <ScottPlot:AvaPlot
            x:Name="AvaPlot1"
            Grid.Row="0"
            Grid.Column="1"
            Margin="0,0,0,0" />

        <TextBlock
            Grid.Row="0"
            Grid.Column="1"
            Margin="5"
            HorizontalAlignment="Left"
            VerticalAlignment="Bottom"
            FontSize="14"
            Text="{CompiledBinding DataFlowStatus}" />

        <ToggleSwitch
            Grid.Row="0"
            Grid.Column="1"
            Margin="0,10,10,0"
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            Content="Реальное время"
            IsChecked="{CompiledBinding IsRealtimeMode,
                                        Mode=TwoWay}"
            IsEnabled="{CompiledBinding !IsDiagramAcquisitionRunning}"
            OffContent="Выкл"
            OnContent="Вкл"
            ZIndex="2" />



        <StackPanel
            Grid.Row="0"
            Grid.Column="1"
            Margin="10,10,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Orientation="Vertical"
            ZIndex="1">
            <TextBlock
                Margin="0,0,10,0"
                VerticalAlignment="Center"
                Text="Тип графика:" />
            <RadioButton
                Margin="0,0,10,0"
                Content="дБ"
                GroupName="GraphType"
                IsChecked="{CompiledBinding IsPowerNormSelected,
                                            Mode=TwoWay}"
                IsEnabled="{CompiledBinding !IsDiagramAcquisitionRunning}" />
            <RadioButton
                Content="Линейный"
                GroupName="GraphType"
                IsChecked="{x:Null}"
                IsEnabled="{CompiledBinding !IsDiagramAcquisitionRunning}" />
        </StackPanel>

        <Grid Grid.Row="0" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="0.33*" />
                <RowDefinition Height="0.33*" />
                <RowDefinition Height="0.33*" />
            </Grid.RowDefinitions>

            <!--  Верхний ряд - Передающая антенна  -->
            <StackPanel
                Grid.Row="0"
                Margin="10"
                VerticalAlignment="Center">
                <TextBlock
                    Margin="0,0,0,5"
                    FontWeight="Bold"
                    Text="Передающая антенна" />
                <StackPanel Margin="0,0,0,5" Orientation="Horizontal">
                    <TextBlock
                        Margin="0,0,5,0"
                        VerticalAlignment="Center"
                        Text="Угол:" />
                    <NumericUpDown
                        Width="125"
                        FormatString="0.0"
                        Increment="1"
                        KeyDown="NumericUpDown_KeyDown"
                        Maximum="359"
                        Minimum="0"
                        Watermark="0-359"
                        Value="{CompiledBinding TransmitterMoveAngle,
                                                Mode=TwoWay}" />
                </StackPanel>
                <TextBlock
                    FontSize="12"
                    Foreground="Red"
                    Text="{CompiledBinding TransmitterMoveAngleError}" />
                <Button
                    Width="100"
                    Margin="0,0,0,10"
                    HorizontalAlignment="Left"
                    Command="{CompiledBinding MoveTransmitterToAngleCommand}"
                    Content="Переместить в"
                    IsEnabled="{CompiledBinding CanUseWhenPortOpen}" />

                <StackPanel Margin="0,0,0,5" Orientation="Horizontal">
                    <TextBlock
                        Margin="0,0,5,0"
                        VerticalAlignment="Center"
                        Text="Угол:" />
                    <NumericUpDown
                        Width="125"
                        FormatString="0.0"
                        Increment="1"
                        KeyDown="NumericUpDown_KeyDown"
                        Maximum="359"
                        Minimum="0"
                        Watermark="0-359"
                        Value="{CompiledBinding TransmitterSetAngle,
                                                Mode=TwoWay,
                                                FallbackValue=0}" />
                </StackPanel>
                <TextBlock
                    FontSize="12"
                    Foreground="Red"
                    Text="{CompiledBinding TransmitterSetAngleError}" />
                <Button
                    Width="100"
                    HorizontalAlignment="Left"
                    Command="{CompiledBinding SetTransmitterAngleCommand}"
                    Content="Задать"
                    IsEnabled="{CompiledBinding CanUseWhenPortOpen}" />
            </StackPanel>

            <!--  Средний ряд - Существующие текстовые блоки  -->
            <StackPanel Grid.Row="1" VerticalAlignment="Center">
                <TextBlock Text="Receiver Angle:" />
                <TextBlock Margin="2" Text="{CompiledBinding ReceiverAngleDegStr}" />

                <TextBlock Text="Transmitter Angle:" />
                <TextBlock Margin="2" Text="{CompiledBinding TransmitterAngleDegStr}" />

                <TextBlock Text="Power (dBm):" />
                <TextBlock Margin="2" Text="{CompiledBinding PowerDbmStr}" />

                <TextBlock Text="Antenna Type:" />
                <TextBlock Margin="2" Text="{CompiledBinding AntennaTypeStr}" />

                <TextBlock Text="Rx Antenna Counter:" />
                <TextBlock Margin="2" Text="{CompiledBinding RxAntennaCounterStr}" />

                <ToggleSwitch
                    Margin="10,0,0,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Content="Тёмная тема"
                    IsChecked="{CompiledBinding IsDarkTheme,
                                                Mode=TwoWay}" />
            </StackPanel>

            <!--  Нижний ряд - Приемная антенна  -->
            <StackPanel Grid.Row="2" VerticalAlignment="Center">
                <TextBlock
                    Margin="0,0,0,5"
                    FontWeight="Bold"
                    Text="Приемная антенна" />
                <StackPanel Margin="0,0,0,5" Orientation="Horizontal">
                    <TextBlock
                        Margin="0,0,5,0"
                        VerticalAlignment="Center"
                        Text="Угол:" />
                    <NumericUpDown
                        Width="125"
                        FormatString="0.0"
                        Increment="1"
                        KeyDown="NumericUpDown_KeyDown"
                        Maximum="359"
                        Minimum="0"
                        Watermark="0-359"
                        Value="{CompiledBinding ReceiverMoveAngle,
                                                Mode=TwoWay}" />
                </StackPanel>
                <TextBlock
                    FontSize="12"
                    Foreground="Red"
                    Text="{CompiledBinding ReceiverMoveAngleError}" />
                <Button
                    Width="100"
                    Margin="0,0,0,10"
                    HorizontalAlignment="Left"
                    Command="{CompiledBinding MoveReceiverToAngleCommand}"
                    Content="Переместить в"
                    IsEnabled="{CompiledBinding CanUseWhenPortOpen}" />

                <StackPanel Margin="0,0,0,5" Orientation="Horizontal">
                    <TextBlock
                        Margin="0,0,5,0"
                        VerticalAlignment="Center"
                        Text="Угол:" />
                    <NumericUpDown
                        Width="125"
                        FormatString="0.0"
                        Increment="1"
                        KeyDown="NumericUpDown_KeyDown"
                        Maximum="359"
                        Minimum="0"
                        Watermark="0-359"
                        Value="{CompiledBinding ReceiverSetAngle,
                                                Mode=TwoWay,
                                                FallbackValue=0}" />
                </StackPanel>
                <TextBlock
                    FontSize="12"
                    Foreground="Red"
                    Text="{CompiledBinding ReceiverSetAngleError}" />
                <Button
                    Width="100"
                    HorizontalAlignment="Left"
                    Command="{CompiledBinding SetReceiverAngleCommand}"
                    Content="Задать"
                    IsEnabled="{CompiledBinding CanUseWhenPortOpen}" />
            </StackPanel>

        </Grid>

        <Grid
            Grid.Row="0"
            Grid.Column="3"
            Margin="5"
            ShowGridLines="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="200" />
            </Grid.RowDefinitions>

            <StackPanel
                Grid.Row="0"
                Margin="0,0,0,8"
                HorizontalAlignment="Left"
                Orientation="Horizontal">
                <Button
                    Margin="5"
                    Command="{CompiledBinding AddTabCommand}"
                    Content="Добавить"
                    IsEnabled="{CompiledBinding CanUseWhenPortOpen}" />
                <Button
                    Margin="5"
                    Command="{CompiledBinding RemoveTabCommand}"
                    Content="Удалить"
                    IsEnabled="{CompiledBinding CanRemoveTabWhenPortOpen}" />
                <Button
                    x:Name="ExportButton"
                    Margin="5"
                    IsEnabled="{CompiledBinding CanUseWhenHasTabs}">
                    <PathIcon Data="{StaticResource save_as_regular}" />
                </Button>
                <Button
                    x:Name="TogglePlotVisibilityButton"
                    Margin="5"
                    Click="TogglePlotVisibility_Click"
                    Content="П/С "
                    IsEnabled="{CompiledBinding CanUseWhenHasTabs}" />
                <ColorPicker
                    Width="70"
                    Height="32"
                    Margin="5"
                    Color="{Binding SelectedTab.Plot.ColorHex, Mode=TwoWay, Converter={StaticResource HexToColorConverter}}" />

            </StackPanel>
            <TabControl
                Grid.Row="1"
                IsEnabled="{CompiledBinding !IsDiagramAcquisitionRunning}"
                ItemsSource="{CompiledBinding Tabs}"
                SelectedIndex="{CompiledBinding SelectedTabIndex}">
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBox
                                MinWidth="100"
                                IsVisible="{CompiledBinding IsEditingHeader}"
                                KeyDown="HeaderEdit_KeyDown"
                                LostFocus="HeaderEdit_LostFocus"
                                Text="{CompiledBinding Header,
                                                       Mode=TwoWay}" />
                            <TextBlock
                                MinWidth="100"
                                DoubleTapped="Header_DoubleTapped"
                                IsVisible="{CompiledBinding !IsEditingHeader}}"
                                Text="{CompiledBinding Header}" />
                        </StackPanel>
                    </DataTemplate>
                </TabControl.ItemTemplate>

                <TabControl.ContentTemplate>
                    <DataTemplate DataType="{x:Type vm:TabViewModel}">
                        <treegrid:TreeDataGrid
                            MinHeight="100"
                            Margin="0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Top"
                            Source="{Binding AntennaSource}" />
                    </DataTemplate>
                </TabControl.ContentTemplate>
            </TabControl>

            <Grid
                Grid.Row="2"
                Margin="0,8,0,0"
                ShowGridLines="True">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="55" />
                    <ColumnDefinition Width="130" />
                    <ColumnDefinition Width="80" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <!--  Размер сектора  -->
                <TextBlock
                    Grid.Row="0"
                    Grid.Column="0"
                    Margin="0,0,4,0"
                    VerticalAlignment="Center"
                    Text="Размер:" />
                <NumericUpDown
                    Name="NumericUpDownSectorSize"
                    Grid.Row="0"
                    Grid.Column="1"
                    Width="115"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Increment="5"
                    IsEnabled="{CompiledBinding !IsDiagramAcquisitionRunning}"
                    LostFocus="NumericUpDown_LostFocus"
                    Maximum="360"
                    Minimum="10"
                    Watermark="Размер сектора"
                    Value="{CompiledBinding SectorSize,
                                            Mode=TwoWay}" />

                <!--  Центр сектора  -->
                <TextBlock
                    Grid.Row="1"
                    Grid.Column="0"
                    Margin="0,0,4,0"
                    VerticalAlignment="Center"
                    Text="Центр:" />
                <NumericUpDown
                    Name="NumericUpDownSectorCenter"
                    Grid.Row="1"
                    Grid.Column="1"
                    Width="115"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Increment="5"
                    IsEnabled="{CompiledBinding !IsDiagramAcquisitionRunning}"
                    KeyDown="NumericUpDown_KeyDown"
                    LostFocus="NumericUpDown_LostFocus"
                    Maximum="360"
                    Minimum="-1"
                    Watermark="Центр сектора"
                    Value="{CompiledBinding SectorCenter,
                                            Mode=TwoWay}" />

                <StackPanel
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="2"
                    Margin="8,4,0,0"
                    VerticalAlignment="Center"
                    Orientation="Vertical">
                    <Button
                        Width="60"
                        Height="28"
                        Margin="0,0,0,6"
                        Command="{CompiledBinding Set120DegreesCommand}"
                        Content="120°"
                        IsEnabled="{CompiledBinding CanUseWhenPortOpen}" />
                    <Button
                        Width="60"
                        Height="28"
                        Margin="0,0,0,6"
                        Command="{CompiledBinding Set180DegreesCommand}"
                        Content="180°"
                        IsEnabled="{CompiledBinding CanUseWhenPortOpen}" />
                    <Button
                        Width="60"
                        Height="28"
                        Margin="0,0,0,6"
                        Command="{CompiledBinding Set360DegreesCommand}"
                        Content="360°"
                        IsEnabled="{CompiledBinding CanUseWhenPortOpen}" />
                </StackPanel>
                <StackPanel
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="3"
                    Margin="0,8,0,0"
                    VerticalAlignment="Top"
                    Orientation="Vertical">
                    <CheckBox
                        MinWidth="130"
                        Margin="0,0,8,0"
                        Content="отображать антенну"
                        IsChecked="{CompiledBinding ShowAntenna,
                                                    Mode=TwoWay}" />
                    <CheckBox
                        MinWidth="130"
                        Content="отображать сектор"
                        IsChecked="{CompiledBinding ShowSector,
                                                    Mode=TwoWay}" />
                </StackPanel>

                <!--  Кнопки построения и прерывания диаграммы  -->
                <Button
                    x:Name="StartButton"
                    Grid.Row="2"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Height="32"
                    Margin="0,8,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Bottom"
                    Command="{CompiledBinding StartDiagramAcquisitionCommand}"
                    Content="Начать построение диаграммы"
                    IsEnabled="{CompiledBinding IsPortOpen}"
                    IsVisible="{CompiledBinding !IsDiagramAcquisitionRunning}">
                    <Button.Styles>
                        <Style>
                            <Style.Resources>
                                <SolidColorBrush x:Key="ThemeBorderMidBrush">LimeGreen</SolidColorBrush>
                                <SolidColorBrush x:Key="ThemeControlHighBrush">LightGreen</SolidColorBrush>
                                <SolidColorBrush x:Key="ButtonBorderBrush">LimeGreen</SolidColorBrush>
                                <SolidColorBrush x:Key="ButtonBackground">LimeGreen</SolidColorBrush>
                                <SolidColorBrush x:Key="ButtonBackgroundPointerOver">Lime</SolidColorBrush>
                                <SolidColorBrush x:Key="ButtonBackgroundPressed">LightGreen</SolidColorBrush>
                            </Style.Resources>
                        </Style>
                    </Button.Styles>
                </Button>
                <Button
                    x:Name="StopButton"
                    Grid.Row="2"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Height="32"
                    Margin="0,8,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Bottom"
                    Command="{CompiledBinding CancelDiagramAcquisitionCommand}"
                    Content="              Прервать             "
                    IsEnabled="{CompiledBinding IsPortOpen}"
                    IsVisible="{CompiledBinding IsDiagramAcquisitionRunning}">
                    <Button.Styles>
                        <Style>
                            <Style.Resources>
                                <SolidColorBrush x:Key="ThemeBorderMidBrush">Red</SolidColorBrush>
                                <SolidColorBrush x:Key="ThemeControlHighBrush">DarkRed</SolidColorBrush>
                                <SolidColorBrush x:Key="ButtonBorderBrush">Red</SolidColorBrush>
                                <SolidColorBrush x:Key="ButtonBackground">OrangeRed</SolidColorBrush>
                                <SolidColorBrush x:Key="ButtonBackgroundPointerOver">Red</SolidColorBrush>
                                <SolidColorBrush x:Key="ButtonBackgroundPressed">OrangeRed</SolidColorBrush>
                            </Style.Resources>
                        </Style>
                    </Button.Styles>
                </Button>

            </Grid>

        </Grid>
    </Grid>

</Window>
